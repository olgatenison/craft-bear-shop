// app/[lang]/layout.tsx
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import Header from "../components/Header";
import { ClerkProvider } from "@clerk/nextjs";
import { enUS, fiFI, ukUA, ruRU } from "@clerk/localizations";
import { etEE } from "@/app/i18n/clerk-et";

type ClerkLocale = typeof enUS;

const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const LOCALES = ["en", "et", "fi", "uk", "ru"] as const;
type Locale = (typeof LOCALES)[number];
const MAP: Record<Locale, ClerkLocale> = {
  en: enUS,
  et: etEE, // временно эстонский = мой
  fi: fiFI,
  uk: ukUA,
  ru: ruRU,
};

export async function generateStaticParams() {
  return LOCALES.map((lang) => ({ lang }));
}

export const metadata: Metadata = {
  title: { default: "Create Next App", template: "%s | Create Next App" },
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{ children: React.ReactNode; params: Promise<{ lang: Locale }> }>) {
  const { lang } = await params;

  return (
    <html lang={lang}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ClerkProvider localization={MAP[lang]}>
          <Header lang={lang} />
          {children}
        </ClerkProvider>
      </body>
    </html>
  );
}
